{"version":3,"sources":["firebaseConfig.js","contexts/FeedContext.js","components/SignUp.js","components/Login.js","components/Nav.js","components/Loader.js","RouteGuard.js","fetchInitialState.js","components/User.js","components/Users.js","components/FeedCard.js","components/ProfilePosts.js","components/ProfileFollowers.js","components/ProfileFollowing.js","components/Profile.js","components/Feed.js","components/Write.js","App.js","serviceWorker.js","reducers/feedReducer.js","providers/FeedProvider.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FeedContext","createContext","SignUp","history","useHistory","feedContext","useContext","useState","name","email","password","confirmPassword","signUpFormState","setSignUpFormState","signUpError","setSignUpError","handleChange","e","target","value","key","currentState","className","to","placeholder","onChange","type","onClick","auth","createUserWithEmailAndPassword","then","result","feedDispatch","user","updateProfile","displayName","a","currentUser","firestore","collection","doc","set","followers","following","userName","push","catch","error","message","Login","iconRef","useRef","logInFormState","setLogInFormState","logInError","setLogInError","visibility","setVisibility","Icon","style","fontSize","cursor","ref","current","textContent","signInWithEmailAndPassword","Nav","activeClassName","signOut","Loader","loaderRef","useLayoutEffect","transform","RouteGuard","props","feedState","initialStateFetched","isLoggedIn","children","redirectRoute","getNameFromEmail","usersList","index","length","fetchInitialState","currentEmail","currentDisplayName","users","posts","feed","allPosts","get","querySnapshot","forEach","id","data","where","orderBy","undefined","filter","post","includes","tweetedBy","item","User","userEmail","actionButton","handleFollow","payload","initialFeedFetched","pointerEvents","update","FieldValue","arrayUnion","handleUnfollow","arrayRemove","Users","redirectTo","map","FeedCard","tweet","moment","unix","postedAt","seconds","fromNow","ProfilePosts","ProfileFollowers","ProfileFollowing","Profile","tabPositionIndicatorActiveTab","profileTabBar","tabSelected","setTabSelected","useEffect","color","childNodes","node","removeAttribute","left","handleTabBarItemClick","preventDefault","idOfClickedElement","currentTarget","Feed","Write","textAreaRef","setTweet","contentEditable","onFocus","addEventListener","CircularProgress","variant","currentTime","serverTimestamp","timeObject","Math","floor","Date","now","add","backgroundColor","App","onAuthStateChanged","path","Boolean","window","location","hostname","match","feedReducer","state","action","updatedFollowing","FeedProvider","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.c3e7606b.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport 'firebase/firebase-auth'\r\nimport 'firebase/firebase-firestore'\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyAJhV28Z2cOGBKHocI0dEAhUdI0t_1khXI\",\r\n    authDomain: \"therapyfynd-challenge.firebaseapp.com\",\r\n    databaseURL: \"https://therapyfynd-challenge.firebaseio.com\",\r\n    projectId: \"therapyfynd-challenge\",\r\n    storageBucket: \"therapyfynd-challenge.appspot.com\",\r\n    messagingSenderId: \"417953929237\",\r\n    appId: \"1:417953929237:web:6996e2ffb5243e0d85d61c\",\r\n    measurementId: \"G-QX4GXFYC64\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;\r\n","import {createContext} from 'react'\r\nconst FeedContext = createContext(null);\r\nexport default FeedContext;","import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport firebase from '../firebaseConfig'\r\nimport '../styles/SignUp.css'\r\nimport FeedContext from '../contexts/FeedContext'\r\n\r\nfunction SignUp() {\r\n    const history = useHistory();\r\n    const feedContext = useContext(FeedContext);\r\n    const [signUpFormState, setSignUpFormState] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    })\r\n    const [signUpError, setSignUpError] = useState(\"\");\r\n    const handleChange = (e)=>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const key = target.name;\r\n        setSignUpFormState(currentState=>({...currentState, [key]: value}));\r\n    }\r\n    const signUpButtonClicked = ()=>{\r\n        if(signUpFormState.name===\"\"){\r\n            setSignUpError(\"Name can't be empty\");\r\n            return;\r\n        }\r\n        else if(signUpFormState.password!==signUpFormState.confirmPassword){\r\n            setSignUpError(\"Password and confirm password do not match.\");\r\n            return;\r\n        }\r\n        else{\r\n            firebase.auth().createUserWithEmailAndPassword(signUpFormState.email, signUpFormState.password)\r\n            .then((result)=>{\r\n                feedContext.feedDispatch({type: \"LOGIN_BYPASS_ROUTE_GUARD\"});\r\n               return result.user.updateProfile({displayName: signUpFormState.name});\r\n            })\r\n            .then(async ()=>{\r\n                const currentUser = firebase.auth().currentUser;\r\n                await firebase.firestore().collection(\"users\").doc(`${currentUser.email}`).set({\r\n                    followers: [],\r\n                    following: [],\r\n                    userName: signUpFormState.name\r\n                });\r\n                setSignUpFormState({\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\"\r\n                });   \r\n                history.push(`/feed`);    \r\n            })\r\n            .catch(function(error) {\r\n                setSignUpError(error.message);\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"SignUp__container\">\r\n            <div className=\"SignUp__navContainer\">\r\n                <div className=\"SignUp__websiteLogo\">\r\n                    TweetX\r\n                </div>\r\n                <div className=\"SignUp__logInButton\">\r\n                    <Link to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"SignUp__formTitleWrapper\">\r\n                <div className=\"SignUp__title\">\r\n                    Create Account\r\n                </div>\r\n                <div className=\"SignUp__formContainer\">\r\n                    <input name=\"name\" placeholder=\"Name\" value={signUpFormState.name} onChange={handleChange}/>\r\n                    <input name=\"email\"\r\n                    type=\"email\"\r\n                     placeholder=\"Email\" value={signUpFormState.email} onChange={handleChange}/>\r\n                    <input name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\" value={signUpFormState.password} onChange={handleChange}/>\r\n                    <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\" placeholder=\"Confirm Password\" value={signUpFormState.confirmPassword} onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"SignUp__error\">\r\n                    {signUpError}\r\n                </div>\r\n                <div className=\"SignUp__signUpButton\" onClick={signUpButtonClicked}>\r\n                    Sign up\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, {useState, useRef, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport firebase from '../firebaseConfig';\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport '../styles/Login.css'\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const iconRef = useRef();\r\n    const feedContext = useContext(FeedContext);\r\n    const [logInFormState, setLogInFormState] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n    const [logInError, setLogInError] = useState(\"\");\r\n    const [visibility, setVisibility] = useState(false);\r\n    const handleChange = (e)=>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const key = target.name;\r\n        setLogInFormState(currentState=>({...currentState, [key]: value}));\r\n    }\r\n    const handleIconClicked = (e)=>{\r\n        iconRef.current.textContent = iconRef.current.textContent === \"visibility\" ? \"visibility_off\" : \"visibility\";\r\n        iconRef.current.textContent === \"visibility_off\" ? setVisibility(true) : setVisibility(false);\r\n    }\r\n    const loginButtonClicked = (e)=>{\r\n        if(logInFormState.email===\"\"){\r\n            setLogInError(\"Email field can't be empty\");\r\n            return;\r\n        }\r\n        else if(logInFormState.password===\"\"){\r\n            setLogInError(\"Password field can't be empty\")\r\n            return;\r\n        }\r\n        else{\r\n            firebase.auth().signInWithEmailAndPassword(logInFormState.email, logInFormState.password)\r\n            .then(()=>{\r\n                setLogInFormState({\r\n                    email: \"\",\r\n                    password: \"\"\r\n                });   \r\n                feedContext.feedDispatch({type: \"LOGIN_BYPASS_ROUTE_GUARD\"});\r\n                history.push(`/feed`);\r\n            })\r\n            .catch(function(error) {\r\n                setLogInError(error.message);\r\n              });   \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"LogIn__container\">\r\n             <div className=\"LogIn__navContainer\">\r\n                <div className=\"LogIn__websiteLogo\">\r\n                    TweetX\r\n                </div>\r\n                <div className=\"LogIn__signUpButton\">\r\n                    <Link to=\"/signup\">\r\n                        Create Account\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"LogIn__formTitleWrapper\">\r\n                <div className=\"LogIn__title\">\r\n                    Login\r\n                </div>\r\n                <div className=\"LogIn__formContainer\">\r\n                    <input name=\"email\" \r\n                    type=\"email\"\r\n                    placeholder=\"Email\" value={logInFormState.email} onChange={handleChange}/>\r\n                    <span className=\"LogIn__passwordIconWrapper\">\r\n                        <input name=\"password\" \r\n                        type={visibility?\"text\":\"password\"} placeholder=\"Password\" value={logInFormState.password} \r\n                        onChange={handleChange}/>\r\n                        <Icon style={{fontSize: \"1.4rem\", cursor: \"pointer\"}} className=\"LogIn__visibilityIcon\" ref={iconRef} onClick={handleIconClicked}>visibility</Icon>\r\n                    </span>\r\n                </div>\r\n                <div className=\"LogIn__error\">\r\n                    {logInError}\r\n                </div>\r\n                <div className=\"LogIn__logInButton\" onClick={loginButtonClicked}>\r\n                    Login\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport '../styles/Nav.css'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport firebase from '../firebaseConfig'\r\nfunction Nav() {\r\n    const history = useHistory();\r\n    const handleSignOutClick = (e)=>{\r\n        return firebase.auth().signOut()\r\n        .then(()=>{\r\n            history.push(\"/login\");\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"Nav__Container\">\r\n            <div className=\"Nav__logo Nav__item\">\r\n                    TweetX\r\n            </div>\r\n            <div className=\"Nav__item\">\r\n                <NavLink to=\"/feed\" activeClassName=\"Nav__itemSelected\">\r\n                    Feed\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"Nav__item\">\r\n                <NavLink to=\"/users\" activeClassName=\"Nav__itemSelected\">\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"Nav__item\">\r\n                <NavLink to=\"/profile/\" activeClassName=\"Nav__itemSelected\">\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"Nav__item Nav__signOutButton\" onClick={handleSignOutClick}>\r\n                    Sign Out\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, {useRef, useLayoutEffect} from 'react'\r\nimport '../styles/Loader.css'\r\nfunction Loader() {\r\n    const loaderRef = useRef(null);\r\n    useLayoutEffect(()=>{\r\n        loaderRef.current.style.transform = \"translate3d(0, calc(50vh - 20px), 0)\";\r\n    })\r\n    return (\r\n        <div className=\"Loader__container\" ref={loaderRef}>\r\n            <div className=\"Loader\">\r\n                <div className=\"rect1\"></div>\r\n                <div className=\"rect2\"></div>\r\n                <div className=\"rect3\"></div>\r\n                <div className=\"rect4\"></div>\r\n                <div className=\"rect5\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useContext} from 'react'\r\nimport FeedContext from './contexts/FeedContext'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport Loader from './components/Loader'\r\nfunction RouteGuard(props) {\r\n    const feedContext = useContext(FeedContext);\r\n    return (\r\n        feedContext.feedState.initialStateFetched\r\n        ?\r\n            feedContext.feedState.isLoggedIn\r\n            ?\r\n                props.children\r\n            :\r\n                <Redirect to={props.redirectRoute}/>\r\n        :\r\n        <Loader />\r\n    )\r\n}\r\n\r\nexport default RouteGuard\r\n","import firebase from './firebaseConfig'\r\nconst getNameFromEmail = (email, usersList) =>{\r\n    for(let index = 0; index < usersList.length; index = index + 1){\r\n        let user = usersList[index];\r\n        if(user.email===email){\r\n            return user.name;\r\n        }\r\n    }\r\n};\r\nconst fetchInitialState = async ()=>{\r\n    if(firebase.auth().currentUser!==null){\r\n        const currentEmail = firebase.auth().currentUser.email;\r\n        const currentDisplayName = firebase.auth().currentUser.displayName;\r\n        const users = [];\r\n        const posts = [];\r\n        let feed = [];\r\n        const allPosts = [];\r\n        await firebase.firestore().collection(\"users\").get()\r\n        .then(querySnapshot=>{\r\n            querySnapshot.forEach(doc=>{\r\n                users.push({\r\n                    email: doc.id,\r\n                    name: doc.data().userName,\r\n                    followers: doc.data().followers,\r\n                    following: doc.data().following\r\n                });\r\n            });\r\n        });\r\n        await firebase.firestore().collection(\"posts\").where(`tweetedBy`,\"==\", `${firebase.auth().currentUser?.email}`)\r\n        .orderBy(\"postedAt\", \"desc\")\r\n        .get()\r\n        .then(querySnapshot=>{\r\n            querySnapshot.forEach(doc=>{\r\n                posts.push({...doc.data(), id: doc.id});\r\n            })\r\n        });\r\n\r\n        await firebase.firestore().collection(\"posts\")\r\n        .orderBy(\"postedAt\", \"desc\")\r\n        .get()\r\n        .then(querySnapshot=>{\r\n            querySnapshot.forEach(doc=>{\r\n                allPosts.push({...doc.data(), id: doc.id});\r\n            })\r\n        });\r\n        \r\n        let currentUser = users.filter((user)=>user.email===firebase.auth().currentUser?.email)[0];\r\n        if (currentUser === undefined){\r\n            currentUser = {\r\n                email: currentEmail,\r\n                name: currentDisplayName,\r\n                followers: [],\r\n                following: [],\r\n            };\r\n            users.push(currentUser);\r\n            feed = [];\r\n        }\r\n        else{\r\n            allPosts.forEach(post=>{\r\n               if(currentUser.following.includes(post.tweetedBy) || post.tweetedBy===currentUser.email){\r\n                   feed.push(post);\r\n               }\r\n            });\r\n            feed.forEach(item=>{\r\n                item.name = getNameFromEmail(item.tweetedBy, users);\r\n            })\r\n        }\r\n        return {\r\n            posts,\r\n            users,\r\n            currentUser,\r\n            feed\r\n        };\r\n    }\r\n    else{\r\n        return null;\r\n    }\r\n}\r\nexport default fetchInitialState;","import React, {useContext, useRef} from 'react'\r\nimport \"../styles/User.css\"\r\nimport firebase from \"../firebaseConfig\"\r\nimport FeedContext from \"../contexts/FeedContext\"\r\nimport fetchInitialState from '../fetchInitialState'\r\n\r\nfunction User({userName, followers, following, userEmail}) {\r\n    const feedContext = useContext(FeedContext);\r\n    const actionButton = useRef();\r\n    const handleFollow = async ()=>{\r\n        feedContext.feedDispatch({type: \"SET_INITIAL_FEED_FETCHED\", payload: {initialFeedFetched: false}});\r\n        actionButton.current.style.pointerEvents = \"none\";\r\n        feedContext.feedDispatch({type: \"ADD_FOLLOWING\", payload: {userEmail}});\r\n        await firebase.firestore().collection(\"users\").doc(`${firebase.auth().currentUser?.email}`)\r\n        .update({\r\n            following: firebase.firestore.FieldValue.arrayUnion(userEmail)\r\n        });\r\n        await firebase.firestore().collection(\"users\").doc(`${userEmail}`)\r\n        .update({\r\n            followers: firebase.firestore.FieldValue.arrayUnion(`${firebase.auth().currentUser?.email}`)\r\n        });\r\n        const {feed} = await fetchInitialState();\r\n        feedContext.feedDispatch({type: \"SET_FEED\", payload: {feed}});\r\n        feedContext.feedDispatch({type: \"SET_INITIAL_FEED_FETCHED\", payload: {initialFeedFetched: true}});\r\n        if(actionButton.current !== null){\r\n            actionButton.current.style.pointerEvents = \"auto\";\r\n        }\r\n    }\r\n    const handleUnfollow = async ()=>{\r\n        feedContext.feedDispatch({type: \"SET_INITIAL_FEED_FETCHED\", payload: {initialFeedFetched: false}});\r\n        actionButton.current.style.pointerEvents = \"none\";\r\n        feedContext.feedDispatch({type: \"REMOVE_FOLLOWING\", payload: {userEmail}});\r\n        await firebase.firestore().collection(\"users\").doc(`${firebase.auth().currentUser?.email}`)\r\n        .update({\r\n            following: firebase.firestore.FieldValue.arrayRemove(userEmail)\r\n        });\r\n        await firebase.firestore().collection(\"users\").doc(`${userEmail}`)\r\n        .update({\r\n            followers: firebase.firestore.FieldValue.arrayRemove(`${firebase.auth().currentUser?.email}`)\r\n        });\r\n        const {feed} = await fetchInitialState();\r\n        feedContext.feedDispatch({type: \"SET_FEED\", payload: {feed}});\r\n        feedContext.feedDispatch({type: \"SET_INITIAL_FEED_FETCHED\", payload: {initialFeedFetched: true}});\r\n        if(actionButton.current !== null){\r\n            actionButton.current.style.pointerEvents = \"auto\";\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"User__container\">\r\n            <div className=\"User__avatar\"></div>\r\n            <div className=\"User__nameFollowingWrapper\">\r\n                <div className=\"User__name\">{userName}</div>\r\n                <div className=\"User__following\">Following: {following.length}</div>\r\n            </div>  \r\n            <div className=\"User_followActionButtonWrapper\" ref={actionButton}>\r\n                {\r\n                    feedContext.feedState.following.includes(userEmail)\r\n                    ?\r\n                    <div className=\"User_loggedInUserAlreadyFollowing\" onClick={handleUnfollow}>Following</div>\r\n                    :\r\n                    <div className=\"User_loggedInUserNotFollowing\" onClick={handleFollow}>Follow</div>\r\n                }   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React, {useContext} from 'react'\r\nimport Nav from './Nav'\r\nimport '../styles/Users.css'\r\nimport RouteGuard from '../RouteGuard'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport User from './User'\r\nimport firebase from \"../firebaseConfig\"\r\nfunction Users() {\r\n    const feedContext = useContext(FeedContext);\r\n    return (\r\n        <RouteGuard redirectTo={\"/login\"}>\r\n            <div className=\"Users__container\">\r\n                <Nav />\r\n                <div className=\"Users__usersListContainer\">\r\n                    {\r\n                        feedContext.feedState.users.map(\r\n                            user=>(\r\n                                    firebase.auth().currentUser?.email !== user.email\r\n                                    ?\r\n                                    <User key={user.email} id={user.email} userName={user.name} followers={user.followers} following={user.following} userEmail={user.email}/>\r\n                                    :\r\n                                    null\r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </RouteGuard>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\nimport \"../styles/FeedCard.css\"\r\nimport moment from 'moment'\r\nfunction FeedCard(props) {\r\n    return (\r\n        <div className=\"FeedCard__container\">\r\n            <div className=\"FeedCard__avatar\"></div>\r\n            <div className=\"FeedCard__name\">{props.name}</div>\r\n            <div className=\"FeedCard__tweet\">{props.tweet}</div>\r\n            <div className=\"FeedCard__time\">{moment.unix(props.postedAt.seconds).fromNow()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedCard\r\n","import React, {useContext} from 'react'\r\nimport '../styles/Profile.css'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport firebase from '../firebaseConfig'\r\nimport FeedCard from './FeedCard';\r\nfunction ProfilePosts() {\r\n    const feedContext = useContext(FeedContext);\r\n    return (\r\n        <div className=\"Profile__mountedComponentContainer\">\r\n            {\r\n                feedContext.feedState.posts.map(\r\n                post=>(\r\n                     <FeedCard name={`${firebase.auth().currentUser.displayName}`} tweet={post.tweet} key={post.id} postedAt={post.postedAt}/>   \r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePosts\r\n","import React, {useContext} from 'react'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport User from './User'\r\nfunction ProfileFollowers() {\r\n    const feedContext = useContext(FeedContext);\r\n    return (\r\n        <div className=\"Profile__mountedComponentContainer\">\r\n            {\r\n                feedContext.feedState.users.map(\r\n                    user=>(\r\n                            feedContext.feedState.followers.includes(user.email)\r\n                            ?\r\n                            <User key={user.email} id={user.email} userName={user.name} followers={user.followers} following={user.following} userEmail={user.email}/>\r\n                            :\r\n                            null\r\n                    )\r\n                )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileFollowers\r\n","import React, {useContext} from 'react'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport User from './User'\r\n\r\nfunction ProfileFollowing() {\r\n    const feedContext = useContext(FeedContext);\r\n    return (\r\n        <div className=\"Profile__mountedComponentContainer\">\r\n             {\r\n                    feedContext.feedState.users.map(\r\n                        user=>(\r\n                                feedContext.feedState.following.includes(user.email)\r\n                                ?\r\n                                <User key={user.email} id={user.email} userName={user.name} followers={user.followers} following={user.following} userEmail={user.email}/>\r\n                                :\r\n                                null\r\n                        )\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileFollowing\r\n","import React, {useContext, useState, useRef, useEffect} from 'react'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport RouteGuard from '../RouteGuard'\r\nimport firebase from \"../firebaseConfig\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Nav from './Nav'\r\nimport '../styles/Profile.css'\r\nimport ProfilePosts from './ProfilePosts';\r\nimport ProfileFollowers from './ProfileFollowers';\r\nimport ProfileFollowing from './ProfileFollowing';\r\nfunction Profile() {\r\n    const tabPositionIndicatorActiveTab = useRef(null);\r\n    const profileTabBar = useRef(null);\r\n    const [tabSelected, setTabSelected] = useState([true, false, false]);\r\n    useEffect(()=>{\r\n        if(profileTabBar?.current===null){\r\n            return;\r\n        }\r\n        profileTabBar.current.style.color = \"#b8b8b8\";\r\n        profileTabBar.current.childNodes.forEach(node=>{\r\n            node.removeAttribute(\"style\");\r\n        })\r\n        if(tabPositionIndicatorActiveTab?.current!==null){\r\n            if(tabSelected[0]){\r\n                profileTabBar.current.childNodes[0].style.color = \"black\";\r\n                tabPositionIndicatorActiveTab.current.style.left = \"calc(100% / 12)\";\r\n            }\r\n            else if(tabSelected[1]){\r\n                profileTabBar.current.childNodes[1].style.color = \"black\";\r\n                tabPositionIndicatorActiveTab.current.style.left = \"calc(100% / 2 - 17% / 1.7)\";\r\n            }\r\n            else if(tabSelected[2]){\r\n                profileTabBar.current.childNodes[2].style.color = \"black\";\r\n                tabPositionIndicatorActiveTab.current.style.left = \"calc(100% - 25%)\";\r\n            }\r\n            else{\r\n                return;\r\n            }\r\n        }\r\n    })\r\n    const feedContext = useContext(FeedContext);\r\n    const handleTabBarItemClick = (e)=>{\r\n        e.preventDefault();\r\n        const currentTarget = e.currentTarget;\r\n        const idOfClickedElement = currentTarget.id;\r\n        if(profileTabBar?.current !==null){\r\n            // profileTabBar.current.removeAttribute(\"style\");\r\n            if(idOfClickedElement===\"Profile__tabBar__postsTab\"){\r\n                setTabSelected([true, false, false]);\r\n                profileTabBar.current.childNodes[0].style.color = \"black\";\r\n            }\r\n            else if(idOfClickedElement===\"Profile__tabBar__followersTab\"){\r\n                setTabSelected([false, true, false]);\r\n                profileTabBar.current.childNodes[1].style.color = \"black\";\r\n            }\r\n            else if(idOfClickedElement===\"Profile__tabBar__followingTab\"){\r\n                setTabSelected([false, false, true]);\r\n                profileTabBar.current.childNodes[2].style.color = \"black\";\r\n            }\r\n            else{\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <RouteGuard>\r\n            <div className=\"Profile__container\">\r\n                <Nav />\r\n                <div className=\"Profile__header\">\r\n                    <div className=\"Profile__avatar\"></div>\r\n                    <div className=\"Profile__name\">{firebase.auth().currentUser.displayName}</div>\r\n                    <div className=\"Profile__info\">\r\n                        <div className=\"postsCount\">Posts: {feedContext.feedState.posts.length}</div>\r\n                        <div className=\"followersCount\">Followers: {feedContext.feedState.followers.length}</div>\r\n                        <div className=\"followingCount\">Following: {feedContext.feedState.following.length}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Profile__tabBarContainer\">\r\n                    <div className=\"Profile__tabPositionIndicator\">\r\n                        <div className=\"Profile__tabPositionIndicatorActiveTab\" ref={tabPositionIndicatorActiveTab}></div>\r\n                    </div>\r\n                    <div className=\"Profile__tabBar\" ref={profileTabBar}>\r\n                        <div className=\"Profile__tabBar__tabItem\" id=\"Profile__tabBar__postsTab\" onClick={handleTabBarItemClick}> <Icon>forum</Icon> Post</div>\r\n                        <div className=\"Profile__tabBar__tabItem\" id=\"Profile__tabBar__followersTab\" onClick={handleTabBarItemClick}> <Icon>people</Icon> Followers</div>\r\n                        <div className=\"Profile__tabBar__tabItem\" id=\"Profile__tabBar__followingTab\" onClick={handleTabBarItemClick}> <Icon>people</Icon> Following</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Profile__contentContainer\">\r\n                    {\r\n                        tabSelected[0]\r\n                        ?\r\n                        <ProfilePosts />\r\n                        :\r\n                            (\r\n                                tabSelected[1]\r\n                                ?\r\n                                <ProfileFollowers />\r\n                                :\r\n                                <ProfileFollowing />\r\n                            )\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        </RouteGuard>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, {useContext} from 'react'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport {Link} from 'react-router-dom'\r\nimport '../styles/Feed.css'\r\nimport RouteGuard from '../RouteGuard'\r\nimport Nav from './Nav'\r\nimport FeedCard from './FeedCard'\r\nimport Loader from './Loader'\r\nfunction Feed() {\r\n    const feed = useContext(FeedContext);\r\n    return (\r\n        <RouteGuard redirectRoute={\"./login\"}>\r\n            <div className=\"Feed__container\">\r\n                <Nav />\r\n                <div className=\"Feed__contentWrapper\">\r\n                    <Link to=\"/write\" className=\"Feed__writeTweetButton\">\r\n                        Write\r\n                    </Link>\r\n                    {\r\n                        feed.feedState.initialFeedFetched\r\n                        ?\r\n                            feed.feedState.feed.length===0\r\n                            ?\r\n                            (\r\n                                <div className=\"Feed__emptyFeedMessage\">\r\n                                    Your feed is empty now, follow others to start seeing something here...\r\n                                </div>\r\n                            )\r\n                            :\r\n                            feed.feedState.feed.map(\r\n                                item=>(\r\n                                    <FeedCard name={item.name} tweet={item.tweet} key={item.id} postedAt={item.postedAt}/>\r\n                                )\r\n                            )\r\n                        :\r\n                        <Loader />\r\n\r\n                    }\r\n                </div>\r\n            </div>  \r\n        </RouteGuard>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, {useState, useRef, useContext} from 'react'\r\nimport '../styles/Write.css'\r\nimport Nav from './Nav'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport {useHistory} from 'react-router-dom'\r\nimport CircularProgress  from '@material-ui/core/CircularProgress';\r\nimport firebase from '../firebaseConfig'\r\nfunction Write() {\r\n    const feedContext = useContext(FeedContext);\r\n    const history = useHistory();\r\n    const textAreaRef = useRef();\r\n    const twitterBlue = \"#1da1f2\";\r\n    const twitterDisableBlue = \"#8dcff8\";\r\n    const maxTweetLength = 280;\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const handleTweetOnChange = (e)=>{\r\n        e.currentTarget.addEventListener(\"keyup\", ()=>{\r\n            setTweet(textAreaRef.current.textContent);\r\n        })\r\n    }\r\n    const handleTweetButtonClick = (e)=>{\r\n        if(tweet.length===0 || tweet.length>maxTweetLength){\r\n            return;\r\n        }\r\n        if(firebase.auth().currentUser !== null){\r\n            const currentTime = firebase.firestore.FieldValue.serverTimestamp();\r\n            const timeObject = {seconds: Math.floor(Date.now()/1000)};\r\n            return firebase.firestore().collection(\"posts\").add({\r\n                tweetedBy: firebase.auth().currentUser.email,\r\n                tweet,\r\n                postedAt: currentTime\r\n            })\r\n            .then((doc)=>{\r\n                feedContext.feedDispatch({type: \"ADD_TO_FEED\", payload: {\r\n                    tweet: {\r\n                        name: `${firebase.auth().currentUser.displayName}`,\r\n                        id: `${doc.id}`,\r\n                        postedAt: timeObject,\r\n                        tweetedBy: `${firebase.auth().currentUser.email}`,\r\n                        tweet\r\n                    }\r\n                }});\r\n                feedContext.feedDispatch({\r\n                    type: \"ADD_TO_POSTS\",\r\n                    payload: {\r\n                        post: {\r\n                            id: `${doc.id}`,\r\n                            postedAt: timeObject,\r\n                            tweetedBy: `${firebase.auth().currentUser.email}`,\r\n                            tweet\r\n                        }\r\n                    }\r\n                })\r\n                history.push(\"/feed\")\r\n\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Write__container\">\r\n            <Nav />\r\n            <div className=\"Write__contentArea\">\r\n                <div className=\"Write__boxProgressWrapper\">\r\n                    <div ref={textAreaRef}\r\n                    contentEditable className=\"Write__box\" placeholder=\"What's happening?\" value={tweet} onFocus={handleTweetOnChange}>\r\n                    </div>\r\n                        {\r\n                                tweet.length>maxTweetLength\r\n                                ?\r\n                                <span className=\"Write__tweetLimitExceed\">\r\n                                    -{tweet.length - maxTweetLength}\r\n                                </span>\r\n                                :\r\n                                <CircularProgress className=\"Write__circularProgress\" variant=\"static\" color=\"primary\" value={tweet.length/2.8}/>\r\n                        }\r\n                </div>\r\n                <div className=\"Write__tweetButton\" onClick={handleTweetButtonClick}\r\n                style={ \r\n                        (tweet.length===0 || tweet.length>maxTweetLength)\r\n                        ? \r\n                        {\r\n                            backgroundColor: twitterDisableBlue,\r\n                            pointerEvents: \"none\"\r\n                        }\r\n                        :\r\n                        {\r\n                            backgroundColor: twitterBlue,\r\n                            pointerEvents: \"initial\"\r\n                        }\r\n                    }>\r\n                    Tweet\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Write\r\n","import React, {useEffect, useContext} from 'react';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login'\nimport Users from './components/Users'\nimport Profile from './components/Profile'\nimport Feed from './components/Feed'\nimport Write from './components/Write'\nimport firebase from './firebaseConfig'\nimport FeedContext from './contexts/FeedContext'\nimport fetchInitialState from './fetchInitialState'\nimport Loader from './components/Loader';\nfunction App() {\n  const feedContext = useContext(FeedContext);\n  const feedDispatch = feedContext.feedDispatch;\n  useEffect(()=>{\n    const unsubscribe = firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        fetchInitialState()\n        .then(result=>{\n          feedDispatch({type: \"SET_INIT_STATE_LOGIN\", payload: {isLoggedIn: true, initialStateFetched: true,\n                                    users: result.users, currentUser: result.currentUser, posts: result.posts, feed: result.feed, initialFeedFetched: true}});\n        })\n      } else {\n        fetchInitialState()\n        .then(result=>{\n          feedDispatch({type: \"SET_INIT_STATE_LOGOUT\", payload: {isLoggedIn: false, initialStateFetched: true, initialFeedFetched: false}});\n        })\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return (\n    feedContext.feedState.initialStateFetched\n    ?\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/profile\">\n              <Profile />\n          </Route>\n          <Route path=\"/feed\">\n            <Feed />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/write\">\n            <Write />\n          </Route>\n          <Route path=\"/\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </div>\n    :\n    <Loader />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const feedReducer = (state, action)=>{\r\n    switch(action.type){\r\n        case \"SET_INIT_STATE_LOGIN\": \r\n            return {...state, isLoggedIn: action.payload.isLoggedIn, users: action.payload.users,\r\n                    followers: action.payload.currentUser.followers, following: action.payload.currentUser.following,\r\n                    initialStateFetched: action.payload.initialStateFetched,\r\n                    posts: action.payload.posts, feed: action.payload.feed,\r\n                    initialFeedFetched: action.payload.initialFeedFetched};\r\n        case \"SET_INIT_STATE_LOGOUT\": \r\n        return {...state, \r\n                isLoggedIn: action.payload.isLoggedIn, \r\n                users: [],\r\n                posts: [],\r\n                feed: [],\r\n                followers: [], \r\n                following: [],\r\n                initialStateFetched: action.payload.initialStateFetched,  initialFeedFetched: action.payload.initialFeedFetched};\r\n        case \"ADD_USER\":\r\n            return {...state, users: [action.payload.user, ...state.users]};\r\n        case \"ADD_FOLLOWING\": \r\n            return {...state, following: [action.payload.userEmail, ...state.following]};\r\n        case \"REMOVE_FOLLOWING\":\r\n            const updatedFollowing = state.following.filter(userEmail=>userEmail!==action.payload.userEmail);\r\n            return {...state, following: updatedFollowing};\r\n        case \"LOGIN_BYPASS_ROUTE_GUARD\":\r\n            return {...state, isLoggedIn: true};\r\n        case \"ADD_TO_FEED\":\r\n            return  {...state, feed: [action.payload.tweet, ...state.feed]};\r\n        case \"SET_FEED\":\r\n            return {...state, feed: action.payload.feed};\r\n        case \"ADD_TO_POSTS\":\r\n            return {...state, posts: [action.payload.post, ...state.posts]};\r\n        case \"SET_INITIAL_FEED_FETCHED\":\r\n            return {...state, initialFeedFetched: action.payload.initialFeedFetched};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default feedReducer;","import React, {useReducer} from 'react'\r\nimport FeedContext from '../contexts/FeedContext'\r\nimport feedReducer from '../reducers/feedReducer'\r\nfunction FeedProvider(props) {\r\n    const [feedState, feedDispatch] = useReducer(feedReducer, {\r\n        posts: [],\r\n        followers: [],\r\n        following: [],\r\n        feed: [],\r\n        users: [],\r\n        initialStateFetched: false,\r\n        isLoggedIn: false,\r\n        initialFeedFetched: false\r\n    });\r\n    \r\n    return (\r\n        <FeedContext.Provider value={{feedState, feedDispatch}}>\r\n            {props.children}\r\n        </FeedContext.Provider>\r\n    )\r\n}\r\n\r\nexport default FeedProvider\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport FeedProvider from './providers/FeedProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <FeedProvider>\n          <App />\n        </FeedProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}